version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecom-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ecom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Product Service
  product-service:
    build:
      context: ./backend/product-service
      dockerfile: Dockerfile
    container_name: ecom-product-service
    environment:
      - DATABASE_URL=postgresql://ecom:ecom123@postgres:5432/ecom_products
      - PORT=8001
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecom-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Cart Service  
  cart-service:
    build:
      context: ./backend/cart-service
      dockerfile: Dockerfile
    container_name: ecom-cart-service
    environment:
      - DATABASE_URL=postgresql://ecom:ecom123@postgres:5432/ecom_carts
      - PORT=8002
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - PRODUCT_SERVICE_URL=http://product-service:8001/api
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      product-service:
        condition: service_healthy
    networks:
      - ecom-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8002/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Gateway (Nginx)
  api-gateway:
    image: nginx:alpine
    container_name: ecom-api-gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/api-gateway.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "3001:80"
    depends_on:
      product-service:
        condition: service_healthy
      cart-service:
        condition: service_healthy
    networks:
      - ecom-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ecom-frontend
    environment:
      - REACT_APP_API_GATEWAY_URL=http://localhost:3001/api
      - REACT_APP_PRODUCT_SERVICE_URL=http://localhost:8001/api
      - REACT_APP_CART_SERVICE_URL=http://localhost:8002/api
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - ecom-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  ecom-network:
    driver: bridge